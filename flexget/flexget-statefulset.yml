apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: flexget
  namespace: flexget
  labels:
    k8s-app: flexget
    kubernetes.io/cluster-service: "true"
    addonmanager.kubernetes.io/mode: Reconcile
    version: v2.2.1
spec:
  serviceName: "flexget"
  replicas: 1
  podManagementPolicy: "Parallel"
  updateStrategy:
   type: "RollingUpdate"
  selector:
    matchLabels:
      k8s-app: flexget
  template:
    metadata:
      labels:
        k8s-app: flexget
    spec:
      nodeSelector:
        kubernetes.io/hostname: wrk-4 
      containers:
        - name: flexget-server
          image: "tnosaj/flexget:latest"
          imagePullPolicy: "Always"
          args:
            - daemon
            - start 
            - --autoreload-config
          ports:
            - containerPort: 5050
          env:
          - name: CI_JOB_TOKEN
            valueFrom:
              secretKeyRef:
                name: flexget
                key: CI_JOB_TOKEN
          # readinessProbe:
          #   httpGet:
          #     path: /-/ready
          #     port: 5050
          #   initialDelaySeconds: 30
          #   timeoutSeconds: 300
          # livenessProbe:
          #   httpGet:
          #     path: /-/healthy
          #     port: 5050
          #   initialDelaySeconds: 30
          #   timeoutSeconds: 300
          # based on 10 running nodes with 30 pods each
          resources:
            limits:
              memory: 200Mi
            requests:
              memory: 100Mi
          volumeMounts:
            - name: flexget-data
              mountPath: /config
      terminationGracePeriodSeconds: 300
      volumes:
        - name: flexget-data
          persistentVolumeClaim:
            claimName: flexget
